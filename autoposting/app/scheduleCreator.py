# -*- coding: utf-8 -*-
from functools import lru_cache

from scheduledb import ScheduleDB
import helpers


def print_type(raw_type, week_type=-1):
    # –ï—Å–ª–∏ –∑–∞–¥–∞–Ω —Ç–∏–ø –Ω–µ–¥–µ–ª–∏ (—á–∏—Å–ª–∏—Ç–µ–ª—å/–∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å), —Ç.–µ week_type –Ω–µ —Ä–∞–≤–µ–Ω –∑–Ω–∞—á–µ–Ω–∏—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é,
    # —Ç–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–∏–ø–µ –Ω–µ–¥–µ–ª–∏ –Ω–µ –≤—ã–≤–æ–¥–∏—Ç—Å—è
    if week_type != -1:
        return ""

    raw_type = int(raw_type)
    if raw_type == 0:
        return "—á–∏—Å–ª"
    elif raw_type == 1:
        return "–∑–Ω–∞–º"
    else:
        return ""


def print_week_type(week_type=-1):
    if week_type == 0:
        return "—á–∏—Å–ª–∏—Ç–µ–ª—å"
    elif week_type == 1:
        return "–∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å"
    else:
        return ""


@lru_cache(maxsize=128)
def create_schedule_text(tag, day, week_type, config):
    result = []
    schedule = ""
    is_empty = True
    try:
        with ScheduleDB(config) as db:
            data = db.get_schedule(tag, day, week_type)

        schedule += "üîé | {}: {}\n\n".format(
            helpers.daysOfWeek_rus[day], print_week_type(week_type))
        index = 0
        while index < len(data):
            is_empty = False
            row = data[index]

            title = ' '.join(str(row[1]).split())
            classroom = ' '.join(str(row[2]).split())

            schedule +=  '‚è≥ | {} –ø–∞—Ä–∞: '.format(str(row[0]))
            # –≠—Ç–æ—Ç –±–ª–æ–∫ –Ω—É–∂–µ–Ω –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ç–µ—Ö –∑–∞–Ω—è—Ç–∏–π, –≥–¥–µ –∑–∞–Ω—è—Ç–∏—è –ø–æ —á–∏—Å–ª–∏—Ç–µ–ª—é –∏ –∑–Ω–∞–º–Ω–∞—Ç–µ–ª—é —Ä–∞–∑–ª–∏—á–∞—é—Ç—Å—è
            if index != len(data) - 1:
                # –°—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç—Å—è –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –∑–∞–Ω—è—Ç–∏—è –¥–∞–Ω–Ω–æ–π –∏ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –∏ –µ—Å–ª–∏ –æ–Ω–∏ —Ä–∞–≤–Ω—ã,
                # —Ç–æ –æ–Ω–∏ –≤—ã–≤–æ–¥—è—Ç—Å—è –≤–º–µ—Å—Ç–µ
                if data[index + 1][0] == row[0]:
                    schedule += '{0} {1} {2}\n'.format(title, classroom, print_type(row[3], week_type))

                    index += 1
                    row = data[index]
                    title = ' '.join(str(row[1]).split())
                    classroom = ' '.join(str(row[2]).split())

                    schedule += '&#12288;&#10;&#12288;' \
                                '&#12288;&#10;&#12288;' \
                                '&#12288;&#10;{0} {1} {2}\n\n'.format(title, classroom, print_type(row[3], week_type))
                else:
                    schedule += '{0} {1} {2}\n\n'.format(title, classroom, print_type(row[3], week_type))
            else:
                schedule += '{0} {1} {2}\n\n'.format(title, classroom, print_type(row[3], week_type))

            index += 1
        result.append(schedule)
        result.append(is_empty)
    except:
        pass
    finally:
        if len(result) != 2:
            result = ['', True]
        return result
